Index.PACKAGES = {"markov4s" : [{"name" : "markov4s.MarkovChain", "shortDescription" : "", "object" : "markov4s\/MarkovChain$.html", "members_object" : [{"label" : "sequence", "tail" : "(iterations: Int, vecSize: Int, elem: A, f: (A, Int) ⇒ Vector[A]): List[Vector[A]]", "member" : "markov4s.MarkovChain.sequence", "link" : "markov4s\/MarkovChain$.html#sequence[A](iterations:Int,vecSize:Int,elem:A,f:(A,Int)=>Vector[A]):List[Vector[A]]", "kind" : "def"}, {"label" : "sequenceRandom", "tail" : "(iterations: Int, vecSize: Int, f: (Int) ⇒ Vector[A]): List[Vector[A]]", "member" : "markov4s.MarkovChain.sequenceRandom", "link" : "markov4s\/MarkovChain$.html#sequenceRandom[A](iterations:Int,vecSize:Int,f:Int=>Vector[A]):List[Vector[A]]", "kind" : "def"}, {"label" : "apply", "tail" : "(): MarkovChain[A]", "member" : "markov4s.MarkovChain.apply", "link" : "markov4s\/MarkovChain$.html#apply[A]:markov4s.MarkovChain[A]", "kind" : "def"}, {"label" : "Data", "tail" : "", "member" : "markov4s.MarkovChain.Data", "link" : "markov4s\/MarkovChain$.html#Data[A]=scala.collection.immutable.HashMap[A,scala.collection.immutable.HashMap[A,Int]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "markov4s\/MarkovChain$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "markov4s\/MarkovChain$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "markov4s\/MarkovChain$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "markov4s\/MarkovChain$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "markov4s\/MarkovChain$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "markov4s\/MarkovChain$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "markov4s\/MarkovChain$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/MarkovChain$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/MarkovChain$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/MarkovChain$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "markov4s\/MarkovChain$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "markov4s\/MarkovChain$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "markov4s\/MarkovChain$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "markov4s\/MarkovChain$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "markov4s\/MarkovChain$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "markov4s\/MarkovChain$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "markov4s\/MarkovChain$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "markov4s\/MarkovChain$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "markov4s\/MarkovChain$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "getSeq", "tail" : "(a: A, atMost: Int): Vector[A]", "member" : "markov4s.MarkovChain.getSeq", "link" : "markov4s\/MarkovChain.html#getSeq(a:A,atMost:Int):Vector[A]", "kind" : "def"}, {"label" : "getSeqWithProb", "tail" : "(a: A, atMost: Int)(rand: RandLike): Vector[A]", "member" : "markov4s.MarkovChain.getSeqWithProb", "link" : "markov4s\/MarkovChain.html#getSeqWithProb(a:A,atMost:Int)(implicitrand:markov4s.RandLike):Vector[A]", "kind" : "def"}, {"label" : "getRandomSeq", "tail" : "(atMost: Int)(rand: RandLike): Vector[A]", "member" : "markov4s.MarkovChain.getRandomSeq", "link" : "markov4s\/MarkovChain.html#getRandomSeq(atMost:Int)(implicitrand:markov4s.RandLike):Vector[A]", "kind" : "def"}, {"label" : "getRandomSeqWithProb", "tail" : "(atMost: Int)(rand: RandLike): Vector[A]", "member" : "markov4s.MarkovChain.getRandomSeqWithProb", "link" : "markov4s\/MarkovChain.html#getRandomSeqWithProb(atMost:Int)(implicitrand:markov4s.RandLike):Vector[A]", "kind" : "def"}, {"label" : "get", "tail" : "(a: A): Option[A]", "member" : "markov4s.MarkovChain.get", "link" : "markov4s\/MarkovChain.html#get(a:A):Option[A]", "kind" : "def"}, {"label" : "getTop", "tail" : "(a: A, num: Int): List[A]", "member" : "markov4s.MarkovChain.getTop", "link" : "markov4s\/MarkovChain.html#getTop(a:A,num:Int):List[A]", "kind" : "def"}, {"label" : "getWithProb", "tail" : "(rand: RandLike)(a: A): Option[A]", "member" : "markov4s.MarkovChain.getWithProb", "link" : "markov4s\/MarkovChain.html#getWithProb(rand:markov4s.RandLike)(a:A):Option[A]", "kind" : "def"}, {"label" : "fromSeq", "tail" : "(xs: Seq[A]): MarkovChain[A]", "member" : "markov4s.MarkovChain.fromSeq", "link" : "markov4s\/MarkovChain.html#fromSeq(xs:Seq[A]):markov4s.MarkovChain[A]", "kind" : "def"}, {"label" : "++", "tail" : "(markovChain: MarkovChain[A]): MarkovChain[A]", "member" : "markov4s.MarkovChain.++", "link" : "markov4s\/MarkovChain.html#++(markovChain:markov4s.MarkovChain[A]):markov4s.MarkovChain[A]", "kind" : "def"}, {"label" : "+", "tail" : "(pair: (A, A)): MarkovChain[A]", "member" : "markov4s.MarkovChain.+", "link" : "markov4s\/MarkovChain.html#+(pair:(A,A)):markov4s.MarkovChain[A]", "kind" : "def"}, {"label" : "join", "tail" : "(that: MarkovChain[A]): MarkovChain[A]", "member" : "markov4s.MarkovChain.join", "link" : "markov4s\/MarkovChain.html#join(that:markov4s.MarkovChain[A]):markov4s.MarkovChain[A]", "kind" : "def"}, {"label" : "put", "tail" : "(a: A, b: A): MarkovChain[A]", "member" : "markov4s.MarkovChain.put", "link" : "markov4s\/MarkovChain.html#put(a:A,b:A):markov4s.MarkovChain[A]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "markov4s.MarkovChain.toString", "link" : "markov4s\/MarkovChain.html#toString():String", "kind" : "def"}, {"member" : "markov4s.MarkovChain#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": Data[A]", "member" : "markov4s.MarkovChain.data", "link" : "markov4s\/MarkovChain.html#data:markov4s.MarkovChain.Data[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "markov4s\/MarkovChain.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "markov4s\/MarkovChain.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "markov4s\/MarkovChain.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "markov4s\/MarkovChain.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "markov4s\/MarkovChain.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "markov4s\/MarkovChain.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "markov4s\/MarkovChain.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/MarkovChain.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/MarkovChain.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/MarkovChain.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "markov4s\/MarkovChain.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "markov4s\/MarkovChain.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "markov4s\/MarkovChain.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "markov4s\/MarkovChain.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "markov4s\/MarkovChain.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "markov4s\/MarkovChain.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "markov4s\/MarkovChain.html", "kind" : "object"}, {"name" : "markov4s.Rand", "shortDescription" : "", "object" : "markov4s\/Rand$.html", "members_class" : [{"label" : "make", "tail" : "(seed: Int): Rand", "member" : "markov4s.Rand.make", "link" : "markov4s\/Rand.html#make(seed:Int):markov4s.Rand", "kind" : "def"}, {"label" : "nextDouble", "tail" : "(): Double", "member" : "markov4s.Rand.nextDouble", "link" : "markov4s\/Rand.html#nextDouble:Double", "kind" : "def"}, {"label" : "nextInt", "tail" : "(): Int", "member" : "markov4s.Rand.nextInt", "link" : "markov4s\/Rand.html#nextInt:Int", "kind" : "def"}, {"label" : "r", "tail" : ": Random", "member" : "markov4s.Rand.r", "link" : "markov4s\/Rand.html#r:scala.util.Random", "kind" : "val"}, {"member" : "markov4s.Rand#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "markov4s\/Rand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "markov4s\/Rand.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "markov4s\/Rand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "markov4s\/Rand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "markov4s\/Rand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "markov4s\/Rand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "markov4s\/Rand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/Rand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/Rand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/Rand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "markov4s\/Rand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "markov4s\/Rand.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "markov4s\/Rand.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "markov4s\/Rand.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "markov4s\/Rand.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "markov4s\/Rand.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "markov4s\/Rand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "markov4s\/Rand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "markov4s\/Rand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(): Rand", "member" : "markov4s.Rand.apply", "link" : "markov4s\/Rand$.html#apply():markov4s.Rand", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "markov4s\/Rand$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "markov4s\/Rand$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "markov4s\/Rand$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "markov4s\/Rand$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "markov4s\/Rand$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "markov4s\/Rand$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "markov4s\/Rand$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/Rand$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/Rand$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/Rand$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "markov4s\/Rand$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "markov4s\/Rand$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "markov4s\/Rand$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "markov4s\/Rand$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "markov4s\/Rand$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "markov4s\/Rand$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "markov4s\/Rand$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "markov4s\/Rand$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "markov4s\/Rand$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "markov4s\/Rand.html", "kind" : "class"}, {"name" : "markov4s.RandLike", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "markov4s\/RandLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "markov4s\/RandLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "markov4s\/RandLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "markov4s\/RandLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "markov4s\/RandLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "markov4s\/RandLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "markov4s\/RandLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/RandLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/RandLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "markov4s\/RandLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "markov4s\/RandLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "markov4s\/RandLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "markov4s\/RandLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "markov4s\/RandLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "markov4s\/RandLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "markov4s\/RandLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "markov4s\/RandLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "markov4s\/RandLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "markov4s\/RandLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "make", "tail" : "(seed: Int): RandLike", "member" : "markov4s.RandLike.make", "link" : "markov4s\/RandLike.html#make(seed:Int):markov4s.RandLike", "kind" : "abstract def"}, {"label" : "nextDouble", "tail" : "(): Double", "member" : "markov4s.RandLike.nextDouble", "link" : "markov4s\/RandLike.html#nextDouble:Double", "kind" : "abstract def"}, {"label" : "nextInt", "tail" : "(): Int", "member" : "markov4s.RandLike.nextInt", "link" : "markov4s\/RandLike.html#nextInt:Int", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "markov4s\/RandLike.html", "kind" : "trait"}]};